// Code generated by MockGen. DO NOT EDIT.
// Source: internal/wrap/discovery.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	host "github.com/libp2p/go-libp2p-core/host"
	discovery "github.com/libp2p/go-libp2p-core/discovery"
)

// MockDiscoverer is a mock of Discoverer interface.
type MockDiscoverer struct {
	ctrl     *gomock.Controller
	recorder *MockDiscovererMockRecorder
}

// MockDiscovererMockRecorder is the mock recorder for MockDiscoverer.
type MockDiscovererMockRecorder struct {
	mock *MockDiscoverer
}

// NewMockDiscoverer creates a new mock instance.
func NewMockDiscoverer(ctrl *gomock.Controller) *MockDiscoverer {
	mock := &MockDiscoverer{ctrl: ctrl}
	mock.recorder = &MockDiscovererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiscoverer) EXPECT() *MockDiscovererMockRecorder {
	return m.recorder
}

// NewMdnsService mocks base method.
func (m *MockDiscoverer) NewMdnsService(ctx context.Context, peerhost host.Host, interval time.Duration, serviceTag string) (discovery.Service, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMdnsService", ctx, peerhost, interval, serviceTag)
	ret0, _ := ret[0].(discovery.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewMdnsService indicates an expected call of NewMdnsService.
func (mr *MockDiscovererMockRecorder) NewMdnsService(ctx, peerhost, interval, serviceTag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMdnsService", reflect.TypeOf((*MockDiscoverer)(nil).NewMdnsService), ctx, peerhost, interval, serviceTag)
}
